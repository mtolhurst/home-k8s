---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bumper-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bumper
  namespace: bumper
  labels:
    app: bumper
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: bumper
  template:
    metadata:
      labels:
        app: bumper
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: bumper-pvc
        - name: nginx-configmap-vol
          configMap:
            name: nginx-conf
            items:
              - key: config
                path: nginx.conf
      containers:
        - name: nginx
          image: nginx:alpine
          ports:
            - name: port1
              containerPort: 443
            - name: port2  
              containerPort: 5223
            - name: port3  
              containerPort: 8007
            - name: port4  
              containerPort: 8883
          volumeMounts:
            - name: nginx-configmap-vol
              mountPath: /etc/nginx
              readOnly: true
        - name: bumper
          image: bmartin5692/bumper
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: Australia/Sydney
            - name: BUMPER_ANNOUNCE_IP
              value: bumper.home
            - name: BUMPER_LISTEN
              value: 0.0.0.0
            - name: LOG_TO_STDOUT
              value: "true"
          volumeMounts:
            - name: data
              mountPath: /bumper/data
              subPath: data
            - name: data
              mountPath: /bumper/certs
              subpath: certs
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: bumper
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: port1
      name: port1
    - port: 5223
      protocol: TCP
      targetPort: port2
      name: port2
    - port: 8007
      protocol: TCP
      targetPort: port3
      name: port3
    - port: 8883
      protocol: TCP
      targetPort: port4
      name: port4
  selector:
    app: bumper
  type: LoadBalancer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  config: |
    error_log stderr;
    pid /var/run/nginx.pid;

    events { }

    stream {
            resolver 127.0.0.11 ipv6=off; #docker dns server
            map_hash_bucket_size 64;

            map $ssl_preread_server_name $internalport {
                    # redirect all requests, which contain "mq" in the SNI -> MQTT
                    ~^.*(mq).*\.eco(vacs|user)\.(net|com)$    8883;

                    # the rest of eco(user|vacs) requests
                    ~^.*eco(vacs|user)\.(net|com)$          443;

                    # mapping default to MQTT as the bots are connecting directly to the ip without SNI
                    default                                   8883;
            }

            server {
                    listen 443;
                    ssl_preread  on;
                    proxy_pass bumper:$internalport;
            }

            server {
                    listen 5223;
                    proxy_pass bumper:5223;
            }

            server {
                    listen 8007;
                    proxy_pass bumper:8007;
            }

            server {
                    listen 8883;
                    proxy_pass bumper:8883;
            }
    }
